#include <iostream>
#include <cmath>
#include <fstream>
void fill_array(int* array, int size) {
	for (int i = 0; i < size; i++) {
			array[i] = (rand() % 90 + 10) - (rand() % 90 + 10);
	}
}
void print_array(int*array, int size) {
	for (int i = 0; i < size; i++) {
			std::cout << array[i] << "  ";
	}
	std::cout << std::endl;
}
void print_notes(int* array, int i, int j, int k) {
	if(i!=0 && j != 1)
	std::cout << std::endl << array[2*i - 2] << " " << array[2*i - 1] << " " << array[2 * j - 2] << " " << array[2 * j - 1] << " " << array[2 * k - 2] << " " << array[2 * k - 1] << " ";
	else {
		if (i == 0 && j != 1) {
			std::cout << std::endl << array[0] << " " << array[1] << " " << array[2 * j - 2] << " " << array[2 * j - 1] << " " << array[2 * k - 2] << " " << array[2 * k - 1] << " ";
	    }
		else {
			if (i != 0 && j == 1) {
				std::cout << std::endl << array[2 * i - 2] << " " << array[2 * i - 1] << " " << array[2] << " " << array[3] << " " << array[2 * k - 2] << " " << array[2 * k - 1] << " ";
			}
			else {
				if (i == 0 && j == 0) {
					std::cout << std::endl << array[0] << " " << array[1] << " " << array[2] << " " << array[3] << " " << array[2 * k - 2] << " " << array[2 * k - 1] << " ";
			    }
			}
		}
	}
}
int main() {
	//srand(time(0));
	setlocale(LC_ALL, "ru");
	int n;
	std::cin >> n;
	int* a = new int [n];
	fill_array(a, n);
	std::ofstream fout;
	fout.open("txt");
	if (!fout.is_open()) {
		std::cout << "Ошибка";
	}
	else {
		for (int i = 0; i < n; i++) {
				fout << a[i] << " ";
		}
	}
	fout.close();
	int* b = new int[n];
	std::ifstream fin;
	fin.open("txt");
	if (!fin.is_open()) {
		std::cout << "ошибка";
		return 1;
	}
	else {
		for (int i = 0; i < n; i++) {
				fin >> b[i];
		}
		print_array(b, n);
	}
	float P = sqrt(pow((b[0]-b[2]), 2) + pow((b[1] - b[3]), 2)) + sqrt(pow((b[0] - b[4]), 2) + pow((b[1] - b[5]), 2)) + sqrt(pow((b[4] - b[2]), 2) + pow((b[5] - b[3]), 2));
	// i это номер первой точки, j номер второй точки, k номер третьей точки
	int l = 0, m = 1, v = 2;
	for (int i = 0; i < n/2; i++) {
		for (int j = 0; j < n/2; j++) {
			for (int k = 0; k < n/2; k++) {
				if (i == j || i == k || j == k) { continue; }
				else { float P_0 = sqrt(pow((b[2*i-2] - b[2*j-2]), 2) + pow((b[2*i-1] - b[2*j-1]), 2)) + sqrt(pow((b[2*j-2] - b[2*k-2]), 2) + pow((b[2*j-1] - b[2*k-1]), 2)) + sqrt(pow((b[2*i-2] - b[2*k-2]), 2) + pow((b[2*i-1] - b[2*k-1]), 2));
				if (P_0 > P) {
					P = P_0;
					l = i;
					m = j;
					v = k;
				}
				}
		    }
		}
	}
	std::cout << P;
	if (m < l && l < v) {
		print_notes(b, m, l, v);
	}
	if (l < m && m < v) {
		print_notes(b, l, m, v);
	}
	if (m < v && v < l) {
		print_notes(b, m, v, l);
	}
	if (l < v && v < m) {
		print_notes(b, l, v, m);
	}
	if (v < l && l < m) {
		print_notes(b, v, l, m);
	}
	if (v < m && m < l) {
		print_notes(b, v, m, l);
	}
	return 0;
}
